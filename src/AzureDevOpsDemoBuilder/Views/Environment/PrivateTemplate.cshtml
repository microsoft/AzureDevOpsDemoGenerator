<html>
<head>
    <script type="text/javascript">
        !function (T, l, y) { var S = T.location, k = "script", D = "instrumentationKey", C = "ingestionendpoint", I = "disableExceptionTracking", E = "ai.device.", b = "toLowerCase", w = "crossOrigin", N = "POST", e = "appInsightsSDK", t = y.name || "appInsights"; (y.name || T[e]) && (T[e] = t); var n = T[t] || function (d) { var g = !1, f = !1, m = { initialize: !0, queue: [], sv: "5", version: 2, config: d }; function v(e, t) { var n = {}, a = "Browser"; return n[E + "id"] = a[b](), n[E + "type"] = a, n["ai.operation.name"] = S && S.pathname || "_unknown_", n["ai.internal.sdkVersion"] = "javascript:snippet_" + (m.sv || m.version), { time: function () { var e = new Date; function t(e) { var t = "" + e; return 1 === t.length && (t = "0" + t), t } return e.getUTCFullYear() + "-" + t(1 + e.getUTCMonth()) + "-" + t(e.getUTCDate()) + "T" + t(e.getUTCHours()) + ":" + t(e.getUTCMinutes()) + ":" + t(e.getUTCSeconds()) + "." + ((e.getUTCMilliseconds() / 1e3).toFixed(3) + "").slice(2, 5) + "Z" }(), iKey: e, name: "Microsoft.ApplicationInsights." + e.replace(/-/g, "") + "." + t, sampleRate: 100, tags: n, data: { baseData: { ver: 2 } } } } var h = d.url || y.src; if (h) { function a(e) { var t, n, a, i, r, o, s, c, u, p, l; g = !0, m.queue = [], f || (f = !0, t = h, s = function () { var e = {}, t = d.connectionString; if (t) for (var n = t.split(";"), a = 0; a < n.length; a++) { var i = n[a].split("="); 2 === i.length && (e[i[0][b]()] = i[1]) } if (!e[C]) { var r = e.endpointsuffix, o = r ? e.location : null; e[C] = "https://" + (o ? o + "." : "") + "dc." + (r || "services.visualstudio.com") } return e }(), c = s[D] || d[D] || "", u = s[C], p = u ? u + "/v2/track" : d.endpointUrl, (l = []).push((n = "SDK LOAD Failure: Failed to load Application Insights SDK script (See stack for details)", a = t, i = p, (o = (r = v(c, "Exception")).data).baseType = "ExceptionData", o.baseData.exceptions = [{ typeName: "SDKLoadFailed", message: n.replace(/\./g, "-"), hasFullStack: !1, stack: n + "\nSnippet failed to load [" + a + "] -- Telemetry is disabled\nHelp Link: https://go.microsoft.com/fwlink/?linkid=2128109\nHost: " + (S && S.pathname || "_unknown_") + "\nEndpoint: " + i, parsedStack: [] }], r)), l.push(function (e, t, n, a) { var i = v(c, "Message"), r = i.data; r.baseType = "MessageData"; var o = r.baseData; return o.message = 'AI (Internal): 99 message:"' + ("SDK LOAD Failure: Failed to load Application Insights SDK script (See stack for details) (" + n + ")").replace(/\"/g, "") + '"', o.properties = { endpoint: a }, i }(0, 0, t, p)), function (e, t) { if (JSON) { var n = T.fetch; if (n && !y.useXhr) n(t, { method: N, body: JSON.stringify(e), mode: "cors" }); else if (XMLHttpRequest) { var a = new XMLHttpRequest; a.open(N, t), a.setRequestHeader("Content-type", "application/json"), a.send(JSON.stringify(e)) } } }(l, p)) } function i(e, t) { f || setTimeout(function () { !t && m.core || a() }, 500) } var e = function () { var n = l.createElement(k); n.src = h; var e = y[w]; return !e && "" !== e || "undefined" == n[w] || (n[w] = e), n.onload = i, n.onerror = a, n.onreadystatechange = function (e, t) { "loaded" !== n.readyState && "complete" !== n.readyState || i(0, t) }, n }(); y.ld < 0 ? l.getElementsByTagName("head")[0].appendChild(e) : setTimeout(function () { l.getElementsByTagName(k)[0].parentNode.appendChild(e) }, y.ld || 0) } try { m.cookie = l.cookie } catch (p) { } function t(e) { for (; e.length;)!function (t) { m[t] = function () { var e = arguments; g || m.queue.push(function () { m[t].apply(m, e) }) } }(e.pop()) } var n = "track", r = "TrackPage", o = "TrackEvent"; t([n + "Event", n + "PageView", n + "Exception", n + "Trace", n + "DependencyData", n + "Metric", n + "PageViewPerformance", "start" + r, "stop" + r, "start" + o, "stop" + o, "addTelemetryInitializer", "setAuthenticatedUserContext", "clearAuthenticatedUserContext", "flush"]), m.SeverityLevel = { Verbose: 0, Information: 1, Warning: 2, Error: 3, Critical: 4 }; var s = (d.extensionConfig || {}).ApplicationInsightsAnalytics || {}; if (!0 !== d[I] && !0 !== s[I]) { var c = "onerror"; t(["_" + c]); var u = T[c]; T[c] = function (e, t, n, a, i) { var r = u && u(e, t, n, a, i); return !0 !== r && m["_" + c]({ message: e, url: t, lineNumber: n, columnNumber: a, error: i }), r }, d.autoExceptionInstrumented = !0 } return m }(y.cfg); function a() { y.onInit && y.onInit(n) } (T[t] = n).queue && 0 === n.queue.length ? (n.queue.push(a), n.trackPageView({})) : a() }(window, document, {
            src: "https://js.monitor.azure.com/scripts/b/ai.2.min.js",
            crossOrigin: "anonymous",
            cfg: {
                connectionString: "InstrumentationKey=__INSTRUMENTATION_KEY__;"
            }
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>
    <script src="~/Scripts/AppScripts/FileUpload.js"></script>
    <script src="~/Scripts/AppScripts/create.js"></script>
    <link rel="stylesheet" href="~/content/assets/css/custom.min.css">
    <link href="~/assets/templategrouping/templategroup.custom.min.css" rel="stylesheet" />

</head>
<body class="mt-3 bg-light">
    <div class="container">
        <div>
            Azure DevOps Demo Generator enables users to create their own templates using existing projects and provision new projects using extracted template.
            The capacity to have custom templates can be helpful in many situations,
            such as constructing custom training content, providing only certain artifacts, etc., <br>
            You can refer the document
            <a href="https://vstsdemodata.visualstudio.com/AzureDevOpsDemoGenerator/_wiki/wikis/AzureDevOpsGenerator.wiki?pagePath=%2FAbout%20Azure%20DevOps%20Demo%20Generator%2FBuild%20your%20own%20template&amp;pageId=58&amp;wikiVersion=GBwikiMaster" target="_blank">here</a>
            on how to use the extractor.
        </div>
        <div class="template-body bg-light p-3 col-lg-12 col-sm-12 row" style="border: 1px solid grey; height: fit-content;">
            <div class="col-lg-4 col-sm-4">
                <label>Upload your template archive (zip) file from:</label>
                <div style="border:1px solid #ccc; padding:15px;">

                    <div style="margin-left:15px">
                        <label class="form-check-label">
                            <input type="radio" name="FileUpload" class="fileMode form-check-input" value="1" checked>
                            Local Drive
                        </label> <br>
                    </div>
                    <div style="margin-left:15px">
                        <label class="form-check-label">
                            <input type="radio" name="FileUpload" class="fileMode form-check-input" value="2">
                            GitHub
                        </label> <br>
                    </div>
                    <div style="margin-left:15px">
                        <label class="form-check-label">
                            <input type="radio" name="FileUpload" class="fileMode form-check-input" value="3">
                            URL
                        </label><br>
                    </div>
                </div>
            </div>
            <div class="col-sm-8 col-lg-8">

                <div id="zipUpload">
                    <p>Specify File</p>
                    <div class="form-group"><input class="form-control" type="file" id="FileUpload1" accept=".zip"></div>
                    <div id="btnContainer">
                        <button class="btn btn-primary" style="float:right" id="btnUpload">Submit</button>
                    </div>

                </div>
                <div class="d-none" id="GitHubUpload">
                    <p>
                        Provide the github URL to your private template (zip file). Note: If your repo is private, you will need to provide a
                        <a href="https://help.github.com/en/articles/creating-a-personal-access-token-for-the-command-line" target="_blank"> Personal Access Token</a>
                    </p>

                    <div class="form-group"><input class="form-control" type="text" id="GitHubUrl" placeholder="https://github.com/{GitHub-ID}/{RepoName}/{Branch}/{FileName}.zip"></div>
                    <div class="form-group">
                        <div class="col-lg-6"></div>
                        <div class="col-lg-6">
                            <input type="checkbox" id="privateGitHubRepo"><label for="privateGitHubRepo" style="margin-left: 5px;">
                                Requires Authorization
                            </label>
                        </div>
                    </div>
                    <div class="form-group row d-none" id="githubAuthDetails">
                        <div class="col-lg-5">
                            <label for="Template" style="width:100%;display: block;text-align: right;">
                                <i class="githubPng" style="padding: 2% 11% 5% 1% !important;"></i>Personal Access Token
                            </label>
                        </div>
                        <div class="col-lg-7">

                            <input class="form-control" type="password" id="GitHubToken" placeholder="Personal Access Token">
                        </div>

                    </div>

                    <div id="btnGitHubContainer">
                        <button class="btn btn-primary" style="float:right" id="btnGitHubUpload">Submit</button>
                    </div>
                </div>
                <div class="d-none" id="urlUpload">
                    <p>Specify the URL to your private template. If the URL needs authentication, please provide username and password </p>
                    <div class="form-group"><input class="form-control" type="text" id="FileURL" placeholder="https://www.mysite.com/mytemplatefile.zip"></div>
                    <div class="col-lg-6">
                        <input type="checkbox" id="privateurl"><label for="privateurl" style="margin-left: 5px;">
                            Requires Authorization
                        </label>
                    </div>
                    <div class="form-row d-none" id="divUserID">
                        <div class="col-lg-5"><label style="text-align: right;display: block;/* vertical-align: middle; */">Username:</label></div><div class="col-lg-7">
                            <input class="form-control" type="text" id="UserId" placeholder="username">
                        </div>
                    </div>
                    <div class="form-row d-none" id="divPassword" style="padding-top: 5px; padding-bottom: 5px;">
                        <div class="col-lg-5">
                            <label style=" display: block; text-align: right;">Password:</label>
                        </div><div class="col-lg-7">
                            <input class="form-control" type="password" id="Password" placeholder="password" />
                        </div>
                    </div>

                    <div id="urlbtnContainer">
                        <button class="btn btn-primary" style="float:right" id="btnURLUpload">Submit</button>
                    </div>
                </div>
                <div align="center"> <span style="color:red" id="urlerror"></span></div>

            </div>
        </div>
    </div>
</body>
</html>
<script type="text/javascript">
    $(document).ready(function () {
        $('.fileMode').change(function () {
            $("#urlerror").empty();
            $('#zipUpload').addClass('d-none');
            $('#urlUpload').addClass('d-none');
            $('#GitHubUpload').addClass('d-none');
            $('#GitHubUrl').val('');
            $('#GitHubToken').val('');
            $('#UserId').val('');
            $('#Password').val('');
            $('#FileURL').val('');
            var selectedVal = $(this).val();
            if (selectedVal === "1") {
                $('#zipUpload').removeClass('d-none');
            }
            else if (selectedVal === "2") {
                $('#GitHubUpload').removeClass('d-none');
            }
            else if (selectedVal === "3") {
                $('#urlUpload').removeClass('d-none');
            }
        });

        $('body').on('click', '#privateGitHubRepo, #privateurl', function () {
            var controlID = this.id;
            $("#urlerror").empty();
            $('#UserId').val('');
            $('#GitHubToken').val('');
            $('#Password').val('');
            if (controlID === 'privateGitHubRepo' && this.checked) {
                $('#githubAuthDetails').removeClass('d-none');
            } else if (controlID === 'privateurl' && this.checked) {
                $('#divUserID').removeClass('d-none');
                $('#divPassword').removeClass('d-none');
            }
            else {
                $('#githubAuthDetails').addClass('d-none');
                $('#divUserID').addClass('d-none');
                $('#divPassword').addClass('d-none');
            }
        });
    });
</script>
