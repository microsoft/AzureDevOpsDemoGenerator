{
    "options": [
        {
            "enabled": false,
            "definition": {
                "id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
            },
            "inputs": {
                "branchFilters": "[\"+refs/heads/*\"]",
                "additionalFields": "{}"
            }
        },
        {
            "enabled": false,
            "definition": {
                "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
            },
            "inputs": {
                "workItemType": "Bug",
                "assignToRequestor": "true",
                "additionalFields": "{}"
            }
        }
    ],
    "variables": {
        "ImageName": {
            "value": "website"
        },
        "location": {
            "value": "westus"
        },
        "resourcegroup": {
            "value": "TailwindTraderWeb"
        },
        "system.debug": {
            "value": "false",
            "allowOverride": true
        }
    },
    "retentionRules": [
        {
            "branches": [
                "+refs/heads/*"
            ],
            "artifacts": [],
            "artifactTypesToDelete": [
                "FilePath",
                "SymbolStore"
            ],
            "daysToKeep": 10,
            "minimumToKeep": 1,
            "deleteBuildRecord": true,
            "deleteTestResults": true
        }
    ],
    "properties": {},
    "tags": [],
    "jobAuthorizationScope": "projectCollection",
    "jobTimeoutInMinutes": 60,
    "jobCancelTimeoutInMinutes": 5,
    "process": {
      "phases": [
        {
          "steps": [
            {
              "environment": {},
              "enabled": true,
              "continueOnError": false,
              "alwaysRun": false,
              "displayName": "Azure Deployment:Create Or Update Resource Group action on $(resourcegroup)",
              "timeoutInMinutes": 0,
              "task": {
                "id": "94a74903-f93f-4075-884f-dc11f34058b4",
                "versionSpec": "2.*",
                "definitionType": "task"
              },
              "inputs": {
                "ConnectedServiceName": "",
                "action": "Create Or Update Resource Group",
                "resourceGroupName": "$(resourcegroup)",
                "location": "$(location)",
                "templateLocation": "Linked artifact",
                "csmFileLink": "",
                "csmParametersFileLink": "",
                "csmFile": "Deploy/deployment.json",
                "csmParametersFile": "",
                "overrideParameters": "",
                "deploymentMode": "Incremental",
                "enableDeploymentPrerequisites": "None",
                "deploymentGroupEndpoint": "",
                "project": "",
                "deploymentGroupName": "",
                "copyAzureVMTags": "true",
                "runAgentServiceAsUser": "false",
                "userName": "",
                "password": "",
                "outputVariable": "",
                "deploymentOutputs": ""
              }
            },
            {
              "environment": {},
              "enabled": true,
              "continueOnError": false,
              "alwaysRun": false,
              "displayName": "ARM Outputs",
              "timeoutInMinutes": 0,
              "task": {
                "id": "584bcff2-3353-4f11-872b-6ba01267a972",
                "versionSpec": "6.*",
                "definitionType": "task"
              },
              "inputs": {
                "ConnectedServiceNameSelector": "ConnectedServiceNameARM",
                "ConnectedServiceNameARM": "",
                "resourceGroupName": "$(resourcegroup)",
                "prefix": "",
                "outputNames": "",
                "whenLastDeploymentIsFailed": "fail",
                "deploymentNameFilter": ""
              }
            },
            {
              "environment": {},
              "enabled": true,
              "continueOnError": false,
              "alwaysRun": false,
              "displayName": "Build an image",
              "timeoutInMinutes": 0,
              "task": {
                "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                "versionSpec": "1.*",
                "definitionType": "task"
              },
              "inputs": {
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "$(acr).azurecr.io",
                "command": "Build an image",
                "dockerFile": "Source/Tailwind.Traders.Web/Dockerfile",
                "arguments": "-t $(acr).azurecr.io/$(ImageName):$(Build.BuildId)",
                "useDefaultContext": "true",
                "buildContext": "",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$(ImageName):$(Build.BuildId)",
                "imageNamesPath": "",
                "qualifyImageName": "true",
                "includeSourceTags": "false",
                "includeLatestTag": "true",
                "addDefaultLabels": "true",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
              }
            },
            {
              "environment": {},
              "enabled": true,
              "continueOnError": false,
              "alwaysRun": false,
              "displayName": "Push Image",
              "timeoutInMinutes": 0,
              "task": {
                "id": "e28912f1-0114-4464-802a-a3a35437fd16",
                "versionSpec": "1.*",
                "definitionType": "task"
              },
              "inputs": {
                "containerregistrytype": "Azure Container Registry",
                "dockerRegistryEndpoint": "",
                "azureSubscriptionEndpoint": "",
                "azureContainerRegistry": "$(acr).azurecr.io",
                "command": "Push an image",
                "dockerFile": "**/Dockerfile",
                "arguments": "",
                "useDefaultContext": "true",
                "buildContext": "",
                "pushMultipleImages": "false",
                "tagMultipleImages": "false",
                "imageName": "$(ImageName):$(Build.BuildId)",
                "imageNamesPath": "",
                "qualifyImageName": "true",
                "includeSourceTags": "false",
                "includeLatestTag": "false",
                "addDefaultLabels": "true",
                "imageDigestFile": "",
                "containerName": "",
                "ports": "",
                "volumes": "",
                "envVars": "",
                "workingDirectory": "",
                "entrypointOverride": "",
                "containerCommand": "",
                "runInBackground": "true",
                "restartPolicy": "no",
                "maxRestartRetries": "",
                "dockerHostEndpoint": "",
                "enforceDockerNamingConvention": "true",
                "memoryLimit": ""
              }
            }
          ],
          "name": "Agent job 1",
          "refName": "Phase_1",
          "condition": "succeeded()",
          "target": {
            "executionOptions": {
              "type": 0
            },
            "allowScriptsAuthAccessOption": false,
            "type": 1
          },
          "jobAuthorizationScope": "projectCollection",
          "jobCancelTimeoutInMinutes": 1
        }
      ],
      "target": {
        "agentSpecification": {
          "identifier": "ubuntu-18.04"
        }
        },
        "type": 1
    },
    "repository": {
        "properties": {
            "cleanOptions": "0",
            "labelSources": "0",
            "labelSourcesFormat": "$(build.buildNumber)",
            "reportBuildStatus": "true",
            "gitLfsSupport": "false",
            "skipSyncSource": "false",
            "checkoutNestedSubmodules": "false",
            "fetchDepth": "0"
        },
        "id": "$TailwindTraders-Website$",
        "type": "TfsGit",
        "name": "TailwindTraders-Website",
        "defaultBranch": "refs/heads/master",
        "clean": "false",
        "checkoutSubmodules": false
    },
    "processParameters": {},
    "quality": "definition",
    "drafts": [],
    "queue": {
        "name": "Azure Pipelines",
        "pool": {
            "name": "Azure Pipelines",
            "isHosted": true
        }
    },
    "name": "Website-CI",
    "path": "\\",
    "type": "build",
    "queueStatus": "enabled"
}