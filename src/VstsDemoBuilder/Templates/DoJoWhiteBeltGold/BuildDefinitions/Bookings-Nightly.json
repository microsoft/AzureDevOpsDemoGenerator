{
  "options": [
    {
      "enabled": true,
      "definition": {
        "id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
      },
      "inputs": {
        "branchFilters": "[\"+refs/heads/*\"]",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "2193090",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    }
  ],
  "triggers": [
    {
      "schedules": [
        {
          "branchFilters": [
            "+refs/heads/master"
          ],
          "timeZoneId": "UTC",
          "startHours": 6,
          "startMinutes": 0,
          "daysToBuild": 31,
          "scheduleJobId": "585ca2c3-2d9c-4651-a3d4-bb84c28cfe80",
          "scheduleOnlyWithChanges": true
        }
      ],
      "triggerType": "schedule"
    }
  ],
  "variables": {
    "BuildConfiguration": {
      "value": "release",
      "allowOverride": true
    },
    "BuildPlatform": {
      "value": "any cpu",
      "allowOverride": true
    },
    "system.debug": {
      "value": "false",
      "allowOverride": true
    }
  },
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "properties": {},
  "tags": [],
  "_links": "{}",
  "buildNumberFormat": "$(date:yyyyMMdd)$(rev:.r)",
  "jobAuthorizationScope": "projectCollection",
  "jobTimeoutInMinutes": 60,
  "jobCancelTimeoutInMinutes": 5,
  "process": {
    "phases": [
      {
        "steps": [
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Use NuGet 4.4.1",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "2c65196a-54fd-4a02-9be8-d9d1837b7c5d",
              "versionSpec": "0.*",
              "definitionType": "task"
            },
            "inputs": {
              "versionSpec": "4.4.1",
              "checkLatest": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "NuGet restore",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "333b11bd-d341-40d9-afcf-b32d5ce6f23b",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "command": "restore",
              "solution": "$(Parameters.solution)",
              "selectOrConfig": "select",
              "feedRestore": "",
              "includeNuGetOrg": "true",
              "nugetConfigPath": "",
              "externalEndpoints": "",
              "noCache": "false",
              "disableParallelProcessing": "false",
              "packagesDirectory": "",
              "verbosityRestore": "Detailed",
              "searchPatternPush": "$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg",
              "nuGetFeedType": "internal",
              "feedPublish": "",
              "publishPackageMetadata": "true",
              "allowPackageConflicts": "false",
              "externalEndpoint": "",
              "verbosityPush": "Detailed",
              "searchPatternPack": "**/*.csproj",
              "configurationToPack": "$(BuildConfiguration)",
              "outputDir": "$(Build.ArtifactStagingDirectory)",
              "versioningScheme": "off",
              "includeReferencedProjects": "false",
              "versionEnvVar": "",
              "requestedMajorVersion": "1",
              "requestedMinorVersion": "0",
              "requestedPatchVersion": "0",
              "packTimezone": "utc",
              "includeSymbols": "false",
              "toolPackage": "false",
              "buildProperties": "",
              "basePath": "",
              "verbosityPack": "Detailed",
              "arguments": ""
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Build solution",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "71a9a2d3-a98a-4caa-96ab-affca411ecda",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "solution": "$(Parameters.solution)",
              "vsVersion": "latest",
              "msbuildArgs": "/p:DeployOnBuild=true /p:WebPublishMethod=Package /p:PackageAsSingleFile=true /p:SkipInvalidConfigurations=true /p:PackageLocation=\"$(build.artifactstagingdirectory)\\\\\"",
              "platform": "$(BuildPlatform)",
              "configuration": "$(BuildConfiguration)",
              "clean": "false",
              "maximumCpuCount": "false",
              "restoreNugetPackages": "false",
              "msbuildArchitecture": "x86",
              "logProjectEvents": "true",
              "createLogFile": "false",
              "logFileVerbosity": "normal"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Test Assemblies",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "ef087383-ee5e-42c7-9a53-ab56c98420f9",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "testSelector": "testAssemblies",
              "testAssemblyVer2": "**\\$(BuildConfiguration)\\*test*.dll\n!**\\obj\\**",
              "testPlan": "",
              "testSuite": "",
              "testConfiguration": "",
              "tcmTestRun": "$(test.RunId)",
              "searchFolder": "$(System.DefaultWorkingDirectory)",
              "testFiltercriteria": "",
              "runOnlyImpactedTests": "False",
              "runAllTestsAfterXBuilds": "50",
              "uiTests": "false",
              "vstestLocationMethod": "version",
              "vsTestVersion": "latest",
              "vstestLocation": "",
              "runSettingsFile": "",
              "overrideTestrunParameters": "",
              "pathtoCustomTestAdapters": "",
              "runInParallel": "False",
              "runTestsInIsolation": "False",
              "codeCoverageEnabled": "False",
              "otherConsoleOptions": "",
              "distributionBatchType": "basedOnTestCases",
              "batchingBasedOnAgentsOption": "autoBatchSize",
              "customBatchSizeValue": "10",
              "batchingBasedOnExecutionTimeOption": "autoBatchSize",
              "customRunTimePerBatchValue": "60",
              "dontDistribute": "False",
              "testRunTitle": "",
              "platform": "$(BuildPlatform)",
              "configuration": "$(BuildConfiguration)",
              "publishRunAttachments": "true",
              "diagnosticsEnabled": "True",
              "collectDumpOn": "onAbortOnly",
              "rerunFailedTests": "False",
              "rerunType": "basedOnTestFailurePercentage",
              "rerunFailedThreshold": "30",
              "rerunFailedTestCasesMaxLimit": "5",
              "rerunMaxAttempts": "3"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": true,
            "alwaysRun": false,
            "displayName": "Publish symbols path",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "0675668a-7bba-4ccb-901d-5ad6554ca653",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "SymbolsFolder": "$(Build.SourcesDirectory)",
              "SearchPattern": "**\\bin\\**\\*.pdb",
              "IndexSources": "true",
              "PublishSymbols": "false",
              "SymbolServerType": "TeamServices",
              "SymbolsPath": "",
              "CompressSymbols": "false",
              "DetailedLog": "true",
              "TreatNotIndexedAsWarning": "false",
              "SymbolsMaximumWaitTime": "",
              "SymbolsProduct": "",
              "SymbolsVersion": "",
              "SymbolsArtifactName": "Symbols_$(BuildConfiguration)"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Copy Files to: $(build.artifactstagingdirectory)",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "SourceFolder": "$(system.defaultworkingdirectory)",
              "Contents": "**/*.json",
              "TargetFolder": "$(build.artifactstagingdirectory)",
              "CleanTargetFolder": "false",
              "OverWrite": "false",
              "flattenFolders": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": true,
            "displayName": "Publish Artifact",
            "timeoutInMinutes": 0,
            "condition": "succeededOrFailed()",
            "task": {
              "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "PathtoPublish": "$(build.artifactstagingdirectory)",
              "ArtifactName": "$(Parameters.ArtifactName)",
              "ArtifactType": "Container",
              "TargetPath": "\\\\my\\share\\$(Build.DefinitionName)\\$(Build.BuildNumber)",
              "Parallel": "false",
              "ParallelCount": "8"
            }
          }
        ],
        "name": "Agent job 1",
        "refName": "Job_1",
        "condition": "succeeded()",
        "target": {
          "executionOptions": {
            "type": 0
          },
          "allowScriptsAuthAccessOption": false,
          "type": 1,
          "queue": "{}"
        },
        "jobAuthorizationScope": "projectCollection"
      }
    ],
    "type": 1
  },
  "repository": {
    "properties": {
      "cleanOptions": "0",
      "labelSources": "0",
      "labelSourcesFormat": "$(build.buildNumber)",
      "reportBuildStatus": "true",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "checkoutNestedSubmodules": "false",
      "fetchDepth": "0",
      "connectedServiceId": ""
    },
    "id": "$DevOps-Dojo-Booking$",
    "type": "TfsGit",
    "name": "DevOps-Dojo-Booking",
    "url": "",
    "defaultBranch": "refs/heads/master",
    "clean": "false",
    "checkoutSubmodules": false
  },
  "processParameters": {
    "inputs": [
      {
        "aliases": [],
        "options": {},
        "properties": {},
        "name": "solution",
        "label": "Path to solution or packages.config",
        "defaultValue": "ModernizationWithAppServiceDotNET/SmartHotel360.Registration.sln",
        "required": true,
        "type": "filePath",
        "helpMarkDown": "The path to the Visual Studio solution file or NuGet packages.config",
        "visibleRule": "",
        "groupName": ""
      },
      {
        "aliases": [],
        "options": {},
        "properties": {},
        "name": "ArtifactName",
        "label": "Artifact Name",
        "defaultValue": "drop",
        "required": true,
        "type": "string",
        "helpMarkDown": "The name of the artifact to create.",
        "visibleRule": "",
        "groupName": ""
      }
    ]
  },
  "quality": "definition",
  "authoredBy": "{}",
  "drafts": [],
  "queue": {
    "_links": "{}",
    "id": "",
    "name": "Hosted VS2017",
    "url": "",
    "pool": {
      "id": "",
      "name": "Hosted VS2017",
      "isHosted": true
    }
  },
  "id": "",
  "name": "Bookings-Nightly",
  "url": "",
  "uri": "",
  "path": "\\",
  "type": "build",
  "queueStatus": "enabled",
  "revision": 3,
  "createdDate": "",
  "project": "{}"
}
