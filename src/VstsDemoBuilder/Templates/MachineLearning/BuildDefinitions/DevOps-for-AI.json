{
  "name": "DevOps-for-AI-CI",
  "path": "\\",
  "type": "build",
  "options": [
    {
      "enabled": false,
      "definition": {
        "id": "5d58cc01-7c75-450c-be18-a388ddb129ec"
      },
      "inputs": {
        "branchFilters": "[\"+refs/heads/*\"]",
        "additionalFields": "{}"
      }
    },
    {
      "enabled": false,
      "definition": {
        "id": "a9db38f9-9fdc-478c-b0f9-464221e58316"
      },
      "inputs": {
        "workItemType": "",
        "assignToRequestor": "true",
        "additionalFields": "{}"
      }
    }
  ],
  "triggers": [
    {
      "branchFilters": [
        "+refs/heads/master"
      ],
      "pathFilters": [],
      "batchChanges": false,
      "maxConcurrentBuildsPerBranch": 1,
      "pollingInterval": 0,
      "triggerType": 2
    },
    {
      "schedules": [
        {
          "branchFilters": [
            "+refs/heads/master"
          ],
          "timeZoneId": "UTC",
          "startHours": 1,
          "startMinutes": 0,
          "daysToBuild": 31,
          "scheduleJobId": "97679be0-0e39-485b-b318-aad1f0da48fa",
          "scheduleOnlyWithChanges": false
        }
      ],
      "triggerType": 8
    }
  ],
  "variables": {
    "system.debug": {
      "value": "false",
      "allowOverride": true
    }
  },
  "retentionRules": [
    {
      "branches": [
        "+refs/heads/*"
      ],
      "artifacts": [],
      "artifactTypesToDelete": [
        "FilePath",
        "SymbolStore"
      ],
      "daysToKeep": 10,
      "minimumToKeep": 1,
      "deleteBuildRecord": true,
      "deleteTestResults": true
    }
  ],
  "properties": {},
  "tags": [],
  "jobAuthorizationScope": 1,
  "jobTimeoutInMinutes": 60,
  "jobCancelTimeoutInMinutes": 5,
  "process": {
    "phases": [
      {
        "steps": [
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Use Python 3.6",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "33c63b11-352b-45a2-ba1b-54cb568a29ca",
              "versionSpec": "0.*",
              "definitionType": "task"
            },
            "inputs": {
              "versionSpec": "3.6",
              "addToPath": "true",
              "architecture": "x64"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Install Requirements",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "6c731c3c-3c68-459a-a5c9-bde6e6595b5b",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "scriptPath": "environment_setup/install_requirements.sh",
              "args": "",
              "disableAutoCwd": "true",
              "cwd": "environment_setup",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Create or Get Workspace",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "connectedServiceNameARM": "",
              "scriptLocation": "inlineScript",
              "scriptPath": "",
              "inlineScript": "python aml_service/00-WorkSpace.py",
              "args": "",
              "addSpnToEnvironment": "false",
              "useGlobalConfig": "false",
              "cwd": "",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Start Training on Local",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "connectedServiceNameARM": "",
              "scriptLocation": "inlineScript",
              "scriptPath": "",
              "inlineScript": "python aml_service/10-TrainOnLocal.py\n",
              "args": "",
              "addSpnToEnvironment": "false",
              "useGlobalConfig": "false",
              "cwd": "",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Evaluate Production Model with Newly trained model",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "connectedServiceNameARM": "",
              "scriptLocation": "inlineScript",
              "scriptPath": "",
              "inlineScript": "python aml_service/15-EvaluateModel.py\n",
              "args": "",
              "addSpnToEnvironment": "false",
              "useGlobalConfig": "false",
              "cwd": "",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Register Model",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "connectedServiceNameARM": "",
              "scriptLocation": "inlineScript",
              "scriptPath": "",
              "inlineScript": "python aml_service/20-RegisterModel.py",
              "args": "",
              "addSpnToEnvironment": "false",
              "useGlobalConfig": "false",
              "cwd": "",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Create Scoring Docker Image",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "46e4be58-730b-4389-8a2f-ea10b3e5e815",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "connectedServiceNameARM": "",
              "scriptLocation": "inlineScript",
              "scriptPath": "",
              "inlineScript": "python aml_service/30-CreateScoringImage.py",
              "args": "",
              "addSpnToEnvironment": "false",
              "useGlobalConfig": "false",
              "cwd": "",
              "failOnStandardError": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Copy Files to: $(Build.ArtifactStagingDirectory)",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "5bfb729a-a7c8-4a78-a7c3-8d717bb7c13c",
              "versionSpec": "2.*",
              "definitionType": "task"
            },
            "inputs": {
              "SourceFolder": "$(Build.SourcesDirectory)",
              "Contents": "**",
              "TargetFolder": "$(Build.ArtifactStagingDirectory)",
              "CleanTargetFolder": "false",
              "OverWrite": "false",
              "flattenFolders": "false"
            }
          },
          {
            "environment": {},
            "enabled": true,
            "continueOnError": false,
            "alwaysRun": false,
            "displayName": "Publish Artifact: Repo",
            "timeoutInMinutes": 0,
            "condition": "succeeded()",
            "task": {
              "id": "2ff763a7-ce83-4e1f-bc89-0ae63477cebe",
              "versionSpec": "1.*",
              "definitionType": "task"
            },
            "inputs": {
              "PathtoPublish": "$(Build.ArtifactStagingDirectory)",
              "ArtifactName": "devops-for-ai",
              "ArtifactType": "Container",
              "TargetPath": "",
              "Parallel": "false",
              "ParallelCount": "8"
            }
          }
        ],
        "name": "Phase 1",
        "refName": "Phase_1",
        "condition": "succeeded()",
        "jobAuthorizationScope": "projectCollection",
        "jobCancelTimeoutInMinutes": 1
      }
    ],
    "target": {
      "agentSpecification": {
        "identifier": "ubuntu-18.04"
      }
    },
    "type": 1
  },
  "repository": {
    "properties": {
      "cleanOptions": "0",
      "labelSources": "0",
      "labelSourcesFormat": "$(build.buildNumber)",
      "reportBuildStatus": "true",
      "gitLfsSupport": "false",
      "skipSyncSource": "false",
      "checkoutNestedSubmodules": "false",
      "fetchDepth": "0"
    },
    "id": "$DevOps-for-AI$",
    "type": "TfsGit",
    "name": "_devops-for-ai-CI",
    "defaultBranch": "refs/heads/master",
    "clean": "false",
    "checkoutSubmodules": false
  },
  "processParameters": {},
  "quality": 1,
  "drafts": [],
  "queue": {
    "name": "Azure Pipelines",
    "pool": {
      "name": "Azure Pipelines",
      "isHosted": true
    }
  }
}