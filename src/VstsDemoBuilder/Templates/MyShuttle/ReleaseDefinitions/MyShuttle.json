{
  "source": "userInterface",
  "revision": 8,
  "description": null,
  "isDeleted": false,
  "variables": {},
  "variableGroups": [],
  "environments": [
    {
      "id": 1,
      "name": "Azure-Dev",
      "rank": 1,
      "owner": {
        "id": "$OwnerId$",
        "displayName": "$OwnerDisplayName$",
        "uniqueName": "$OwnerUniqueName$"
      },
      "variables": {},
      "variableGroups": [],
      "preDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false,
            "id": 1
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": "beforeGates"
        }
      },
      "deployStep": {},
      "postDeployApprovals": {
        "approvals": [
          {
            "rank": 1,
            "isAutomated": true,
            "isNotificationOn": false
          }
        ],
        "approvalOptions": {
          "requiredApproverCount": null,
          "releaseCreatorCanBeApprover": false,
          "autoTriggeredAndPreviousEnvironmentApprovedCanBeSkipped": false,
          "enforceIdentityRevalidation": false,
          "timeoutInMinutes": 0,
          "executionOrder": "afterSuccessfulGates"
        }
      },
      "deployPhases": [
        {
          "deploymentInput": {
            "parallelExecution": {
              "parallelExecutionType": "none"
            },
            "skipArtifactsDownload": false,
            "artifactsDownloadInput": {
              "downloadInputs": []
            },
            "queueId": "$Hosted VS2017$",
            "demands": [],
            "enableAccessToken": false,
            "timeoutInMinutes": 0,
            "jobCancelTimeoutInMinutes": 1,
            "condition": "succeeded()",
            "overrideInputs": {}
          },
          "rank": 1,
          "phaseType": "agentBasedDeployment",
          "name": "Run on agent",
          "workflowTasks": [
            {
              "environment": {},
              "taskId": "bd1bed02-f04e-11e7-8c3f-9a214cf093ae",
              "version": "1.*",
              "name": "Execute Azure MySQL : SqlTaskFile",
              "refName": "",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": "task",
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "",
                "ServerName": "",
                "DatabaseName": "",
                "SqlUsername": "",
                "SqlPassword": "",
                "TaskNameSelector": "SqlTaskFile",
                "SqlFile": "$(System.DefaultWorkingDirectory)/**/drop/CreateMYSQLDB.sql",
                "SqlInline": "",
                "SqlAdditionalArguments": "",
                "IpDetectionMethod": "AutoDetect",
                "StartIpAddress": "",
                "EndIpAddress": "",
                "DeleteFirewallRule": "true"
              }
            },
            {
              "environment": {},
              "taskId": "497d490f-eea7-4f2b-ab94-48d9c1acdcb1",
              "version": "4.*",
              "name": "Deploy Azure App Service",
              "refName": "AzureRmWebAppDeployment1",
              "enabled": true,
              "alwaysRun": false,
              "continueOnError": false,
              "timeoutInMinutes": 0,
              "definitionType": null,
              "overrideInputs": {},
              "condition": "succeeded()",
              "inputs": {
                "ConnectedServiceName": "",
                "WebAppKind": "Web App on Windows",
                "WebAppName": "",
                "DeployToSlotFlag": "false",
                "ResourceGroupName": "",
                "SlotName": "",
                "ImageSource": "Registry",
                "AzureContainerRegistry": "",
                "AzureContainerRegistryLoginServer": "",
                "AzureContainerRegistryImage": "",
                "AzureContainerRegistryTag": "",
                "DockerRepositoryAccess": "public",
                "RegistryConnectedServiceName": "",
                "PrivateRegistryImage": "",
                "PrivateRegistryTag": "",
                "DockerNamespace": "",
                "DockerRepository": "",
                "DockerImageTag": "$(Build.BuildId)",
                "VirtualApplication": "",
                "Package": "$(System.DefaultWorkingDirectory)/**/*.war",
                "BuiltinLinuxPackage": "$(System.DefaultWorkingDirectory)/**/*.zip",
                "RuntimeStack": "",
                "StartupCommand": "",
                "WebAppUri": "",
                "ScriptType": "",
                "InlineScript": "",
                "ScriptPath": "",
                "GenerateWebConfig": "false",
                "WebConfigParameters": "",
                "AppSettings": "",
                "ConfigurationSettings": "",
                "TakeAppOfflineFlag": "true",
                "UseWebDeploy": "false",
                "SetParametersFile": "",
                "RemoveAdditionalFilesFlag": "false",
                "ExcludeFilesFromAppDataFlag": "false",
                "AdditionalArguments": "",
                "RenameFilesFlag": "true",
                "XmlTransformation": "false",
                "XmlVariableSubstitution": "false",
                "JSONFiles": ""
              }
            }
          ]
        }
      ],
      "environmentOptions": {
        "emailNotificationType": "OnlyOnFailure",
        "emailRecipients": "release.environment.owner;release.creator",
        "skipArtifactsDownload": false,
        "timeoutInMinutes": 0,
        "enableAccessToken": false,
        "publishDeploymentStatus": true,
        "badgeEnabled": false,
        "autoLinkWorkItems": false,
        "pullRequestDeploymentEnabled": false
      },
      "demands": [],
      "conditions": [
        {
          "name": "ReleaseStarted",
          "conditionType": "event",
          "value": ""
        }
      ],
      "executionPolicy": {
        "concurrencyCount": 0,
        "queueDepthCount": 0
      },
      "schedules": [],
      "currentRelease": {
        "id": 6,
        "_links": {}
      },
      "retentionPolicy": {
        "daysToKeep": 30,
        "releasesToKeep": 3,
        "retainBuild": true
      },
      "processParameters": {
        "inputs": [
          {
            "aliases": [],
            "options": {},
            "properties": {},
            "name": "ConnectedServiceName",
            "label": "Azure subscription",
            "defaultValue": "",
            "required": true,
            "type": "connectedService:AzureRM",
            "helpMarkDown": "Select the Azure Resource Manager subscription for the deployment.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "aliases": [],
            "options": {
              "app": "Web App",
              "applinux": "Linux App",
              "functionapp": "Function App",
              "api": "API App",
              "mobileapp": "Mobile App"
            },
            "properties": {
              "EditableOptions": "false"
            },
            "name": "WebAppKind",
            "label": "App type",
            "defaultValue": "app",
            "type": "pickList",
            "helpMarkDown": "",
            "groupName": ""
          },
          {
            "aliases": [],
            "options": {},
            "properties": {
              "EditableOptions": "True"
            },
            "name": "WebAppName",
            "label": "App service name",
            "defaultValue": "MyShuttle1",
            "required": true,
            "type": "pickList",
            "helpMarkDown": "Enter or select the name of an existing Azure App Service.",
            "visibleRule": "",
            "groupName": ""
          },
          {
            "aliases": [],
            "options": {},
            "properties": {},
            "name": "DockerNamespace",
            "label": "Registry or Namespace",
            "defaultValue": "",
            "required": true,
            "type": "string",
            "helpMarkDown": "A globally unique top-level domain name for your specific registry or namespace.<br/> Note: Fully qualified image name will be of the format: '<b>`<registry or namespace`></b>/`<repository`>:`<tag`>'. For example, '<b>myregistry.azurecr.io</b>/nginx:latest'.",
            "visibleRule": "WebAppKind = applinux",
            "groupName": ""
          },
          {
            "aliases": [],
            "options": {},
            "properties": {},
            "name": "DockerRepository",
            "label": "Repository",
            "defaultValue": "",
            "required": true,
            "type": "string",
            "helpMarkDown": "Name of the repository where the container images are stored.<br/> Note: Fully qualified image name will be of the format: '`<registry or namespace`>/<b>`<repository`></b>:`<tag`>'. For example, 'myregistry.azurecr.io/<b>nginx</b>:latest'.",
            "visibleRule": "WebAppKind = applinux",
            "groupName": ""
          }
        ],
        "dataSourceBindings": [
          {
            "dataSourceName": "AzureRMWebAppNamesByType",
            "parameters": {
              "WebAppKind": "$(WebAppKind)"
            },
            "endpointId": "",
            "target": "WebAppName"
          }
        ]
      },
      "properties": {},
      "preDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "postDeploymentGates": {
        "id": 0,
        "gatesOptions": null,
        "gates": []
      },
      "environmentTriggers": []
    }
  ],
  "artifacts": [
    {
      "sourceId": "$ProjectId$:$MyShuttleBuild-id$",
      "type": "Build",
      "alias": "MyShuttle Build",
      "definitionReference": {
        "defaultVersionBranch": {
          "id": "",
          "name": ""
        },
        "defaultVersionSpecific": {
          "id": "",
          "name": ""
        },
        "defaultVersionTags": {
          "id": "",
          "name": ""
        },
        "defaultVersionType": {
          "id": "latestType",
          "name": "Latest"
        },
        "definition": {
          "id": "$MyShuttleBuild-id$",
          "name": "MyShuttleBuild"
        },
        "project": {
          "id": "$ProjectId$",
          "name": "$ProjectName$"
        }
      },
      "isPrimary": true
    }
  ],
  "triggers": [],
  "releaseNameFormat": "Release-$(rev:r)",
  "tags": [],
  "pipelineProcess": {
    "type": "designer"
  },
  "properties": {
    "DefinitionCreationSource": {
      "$type": "System.String",
      "$value": "ReleaseNew"
    }
  },
  "id": 1,
  "name": "MyShuttleRelease",
  "path": "\\",
  "projectReference": null
}